# See https://github.com/sergeyklay/php-appveyor

branches:
  only:
  - master
  - appveyor
  - w32
  - /^v\d+\.\d+\.\d+$/

environment:
  EXTNAME: skeleton

  matrix:
    - PHP_VERSION: 7.2
      BUILD_TYPE: Win32
      VC_VERSION: vc15
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

    - PHP_VERSION: 7.2
      BUILD_TYPE: nts-Win32
      VC_VERSION: vc15
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

    - PHP_VERSION: 7.3
      BUILD_TYPE: Win32
      VC_VERSION: vc15
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

    - PHP_VERSION: 7.3
      BUILD_TYPE: nts-Win32
      VC_VERSION: vc15
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

    - PHP_VERSION: 7.4
      BUILD_TYPE: Win32
      VC_VERSION: vc15
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

    - PHP_VERSION: 7.4
      BUILD_TYPE: nts-Win32
      VC_VERSION: vc15
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

    - PHP_VERSION: 8.0
      BUILD_TYPE: Win32
      VC_VERSION: vs16
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

    - PHP_VERSION: 8.0
      BUILD_TYPE: nts-Win32
      VC_VERSION: vs16
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

  PHP_SDK_VERSION: 2.2.0
  TEST_PHP_EXECUTABLE: C:\php\php.exe
  NO_INTERACTION: 1
  REPORT_EXIT_STATUS: 1

matrix:
  fast_finish: true

cache:
  - 'C:\Downloads -> .appveyor.yml'

platform:
  - x86
  - x64

init:
  - ps: $DebugPreference = 'SilentlyContinue' # Continue
  - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true") {
        Update-AppveyorBuild -Version "$($Env:APPVEYOR_REPO_TAG_NAME.TrimStart("v"))"
      } else {
        Update-AppveyorBuild -Version "${Env:APPVEYOR_REPO_BRANCH}-$($Env:APPVEYOR_REPO_COMMIT.Substring(0, 7))"
      }

install:
  - ps: Import-Module .\.ci\php-appveyor.psm1

  - ps: InstallPhpSdk     $Env:PHP_SDK_VERSION $Env:VC_VERSION $Env:PLATFORM
  - ps: InstallPhp        $Env:PHP_VERSION $Env:BUILD_TYPE $Env:VC_VERSION $Env:PLATFORM
  - ps: InstallPhpDevPack $Env:PHP_VERSION $Env:BUILD_TYPE $Env:VC_VERSION $Env:PLATFORM

build_script:
  - ps: Import-Module .\.ci\appveyor.psm1
  - ps: InitializeBuildVars
  - cmd: '"%VSDEVCMD%" -arch=%PLATFORM%'
  - cmd: '"%VCVARSALL%" %ARCH%'
  - cmd: C:\php-sdk\bin\phpsdk_setvars
  - cmd: C:\php-devpack\phpize
  - cmd: configure.bat --with-prefix=C:\php --with-php-build=C:\php-devpack --disable-all %ENABLE_EXT%
  - cmd: nmake 2> compile-errors.log 1> compile.log
  - ps: InitializeReleaseVars

test_script:
  - cmd: nmake test

after_build:
  - ps: Set-Location "${Env:APPVEYOR_BUILD_FOLDER}"
  - ps: >-
      PrepareReleasePackage `
        -PhpVersion     $Env:PHP_VERSION `
        -BuildType      $Env:BUILD_TYPE `
        -Platform       $Env:PLATFORM `
        -ConverMdToHtml $true `
        -ReleaseFiles   "${Env:RELEASE_FOLDER}\php_${Env:EXTNAME}.dll",`
                        "${Env:APPVEYOR_BUILD_FOLDER}\CREDITS",`
                        "${Env:APPVEYOR_BUILD_FOLDER}\LICENSE"

on_failure :
  - ps: >-
      If (Test-Path -Path "${Env:APPVEYOR_BUILD_FOLDER}\compile-errors.log") {
        Get-Content -Path "${Env:APPVEYOR_BUILD_FOLDER}\compile-errors.log"
      }

      If (Test-Path -Path "${Env:APPVEYOR_BUILD_FOLDER}\compile.log") {
        Get-Content -Path "${Env:APPVEYOR_BUILD_FOLDER}\compile.log"
      }

      Get-ChildItem "${Env:APPVEYOR_BUILD_FOLDER}\tests" -Recurse -Filter *.diff | Foreach-Object {
        [Environment]::NewLine
        Write-Output $_.FullName
        Get-Content -Path $_.FullName
      }

artifacts:
  - path: '.\$(RELEASE_ZIPBALL).zip'
    name: '$(EXTNAME)'
    type: zip

deploy:
  release: v$(appveyor_build_version)
  description: 'v$(appveyor_build_version)'
  provider: GitHub
  auth_token:
    secure: <your encrypted token>
  artifact: '$(RELEASE_ZIPBALL).zip'
  draft: false
  prerelease: true
  force_update: true
  on:
    branch: master
    APPVEYOR_REPO_TAG: true
